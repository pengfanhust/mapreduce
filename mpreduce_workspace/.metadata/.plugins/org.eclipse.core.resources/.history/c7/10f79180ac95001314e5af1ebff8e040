package hw3;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

import org.apache.hadoop.io.BinaryComparable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.io.WritableComparable;

public class FlightRecordKey implements WritableComparable<BinaryComparable> {

	// connection air port
	private String connectionAirport;

	// flight date
	private String flightDate;

	// separator
	private static final String SEP = "dd23dsf";

	private Text content;

	public FlightRecordKey(String connectionAirport, String flightDate) {
		this.connectionAirport = connectionAirport;
		this.flightDate = flightDate;
		content = new Text(connectionAirport.concat(SEP).concat(flightDate));
	}

	public String getConnectionAirport() {
		return connectionAirport;
	}

	public String getFlightDate() {
		return flightDate;
	}

	@Override
	public void write(DataOutput out) throws IOException {
		content.write(out);
	}

	@Override
	public void readFields(DataInput in) throws IOException {
		content = new Text();
		content.readFields(in);
		String[] arr = content.toString().split(SEP);
		connectionAirport = arr[0];
		flightDate = arr[1];
	}

	@Override
	public int compareTo(BinaryComparable o) {
		// TODO Auto-generated method stub
		return content.compareTo(o);
	}
}
