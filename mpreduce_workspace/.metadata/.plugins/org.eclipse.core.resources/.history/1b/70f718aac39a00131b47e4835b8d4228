package hw4;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

import org.apache.hadoop.io.BinaryComparable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.io.WritableComparable;
import org.apache.hadoop.io.WritableComparator;

public class RecordKey implements WritableComparable<RecordKey> {

	private String airLineName;
	private int flightMonth;

	public RecordKey(String airLineName, int flightMonth) {
		this.flightMonth = flightMonth;
		this.airLineName = airLineName;
	}

	public String getAirLineName() {
		return airLineName;
	}

	public int getFlightMonth() {
		return flightMonth;
	}

	@Override
	public void write(DataOutput out) throws IOException {
		out.writeInt(flightMonth);
		out.writeUTF(airLineName);
	}

	@Override
	public void readFields(DataInput in) throws IOException {
		flightMonth = in.readInt();
		airLineName = in.readUTF();
	}

	@Override
	public int compareTo(RecordKey o) {
		if (!airLineName.equals(o.airLineName)) {
			return airLineName.compareTo(o.airLineName);
		} else if (flightMonth != o.flightMonth) {
			return flightMonth < o.flightMonth ? -1 : 1;
		} else {
			return 0;
		}
	}

	public String toString() {
		return airLineName.concat(" ").concat(String.valueOf(flightMonth));
	}

	public boolean equals(Object o) {
		if (o instanceof RecordKey) {
			return airLineName.equals(((RecordKey) o).airLineName)
					&& flightMonth == ((RecordKey) o).flightMonth;
		}
		return false;
	}
}
