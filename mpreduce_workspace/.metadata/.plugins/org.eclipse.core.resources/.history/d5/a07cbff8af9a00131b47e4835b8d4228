package hw4;

import java.io.DataInput;
import java.io.DataOutput;
import java.io.IOException;

import org.apache.hadoop.io.BinaryComparable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.io.WritableComparable;
import org.apache.hadoop.io.WritableComparator;

public class FlightRecordKey implements WritableComparable<FlightRecordKey> {

	private String airLineName;
	private int flightMonth;


	public FlightRecordKey(String airLineName, int flightMonth) {
		this.flightMonth = flightMonth;
		this.airLineName = airLineName;
	}

	public String getAirLineName() {
		return airLineName;
	}

	public int getFlightMonth() {
		return flightMonth;
	}

	@Override
	public void write(DataOutput out) throws IOException {
		out.writeInt(flightMonth);
		out.writeUTF(airLineName);
	}

	@Override
	public void readFields(DataInput in) throws IOException {
		flightMonth = in.readInt();
		airLineName = in.readUTF();
	}

	@Override
	public int compareTo(BinaryComparable o) {
		return content.compareTo(o);
	}
	
	public String toString() {
		return content.toString();
	}
	
	public boolean equals(Object o) {
		if (o instanceof FlightRecordKey) {
			return ((FlightRecordKey)o).content.equals(content);
		}
		return false;
	}
	
	public int hashCode() {
		return content.hashCode();
	}
	
    /** A Comparator that compares serialized IntPair. */ 
    public static class Comparator extends WritableComparator {
      public Comparator() {
        super(FlightRecordKey.class);
      }

      public int compare(byte[] b1, int s1, int l1,
                         byte[] b2, int s2, int l2) {
        return compareBytes(b1, s1, l1, b2, s2, l2);
      }
    }

    static {                                        // register this comparator
      WritableComparator.define(FlightRecordKey.class, new Comparator());
    }
}
