package sssp;

import java.util.LinkedList;
import java.util.List;

import util.MpRdcFinalConstants;

public class Node {
	private int distance;
	private List<Integer> adjacentList = new LinkedList<Integer>();

	public Node(String info) {
		String[] infos = info.split(MpRdcFinalConstants.FIELD_SEPRATOR);
		if (infos.length == 1) {
			// infinity distance
			distance = Integer.MAX_VALUE;
		} else {
			distance = Integer.parseInt(infos[1]);
		}

		String[] adjacentListStr = infos[0]
				.split(MpRdcFinalConstants.ATTR_SEPRATOR);
		for (String id : adjacentListStr) {
			adjacentList.add(Integer.parseInt(id));
		}
	}

	public List<Integer> adjacentList() {
		return adjacentList;
	}

	public int distance() {
		return distance;
	}

	public void setDistance(int distance) {
		this.distance = distance;
	}

	public String toString() {
		StringBuilder sb = new StringBuilder();
		for (Integer id : adjacentList) {
			sb.append(id.toString()).append(MpRdcFinalConstants.ATTR_SEPRATOR);
		}
		sb.deleteCharAt(sb.length() - 1);
		if (distance != Integer.MAX_VALUE) {
			sb.append(MpRdcFinalConstants.FIELD_SEPRATOR).append(
					String.valueOf(distance));
		}

		return sb.toString();
	}
}
