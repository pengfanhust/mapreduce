package hw4.hpopulate;

import hw4.plain.AverageDelay;
import hw4.plain.GroupingComparator;
import hw4.plain.Record;
import hw4.plain.RecordKey;
import hw4.plain.AverageDelay.AverageDelayMapper;
import hw4.plain.AverageDelay.FlightDelayFilterReducer;

import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.hbase.HBaseConfiguration;
import org.apache.hadoop.hbase.HColumnDescriptor;
import org.apache.hadoop.hbase.HTableDescriptor;
import org.apache.hadoop.hbase.client.HBaseAdmin;
import org.apache.hadoop.hbase.client.HTable;
import org.apache.hadoop.hbase.client.Put;
import org.apache.hadoop.hbase.util.Bytes;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Mapper.Context;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.util.GenericOptionsParser;

import au.com.bytecode.opencsv.CSVParser;

public class HPopulate {
	private static final int INDEX_YEAR = 0;
	private static final int INDEX_MONTH = 2;
	private static final int INDEX_AIR_LINE = 6;
	private static final int INDEX_ARR_DEALY_MIN = 37;
	private static final int INDEX_CANCELLED = 41;
	private static final int INDEX_DIVERTED = 43;
	private static final String TBL_NAME = "flight";
	private static final String COL_FNAME = "data";
	private static final CSVParser csvParser = new CSVParser();

	public static class HPopulateMapper extends
			Mapper<Object, Text, RecordKey, Record> {

		Configuration config;

		protected void setup(Context context) throws IOException,
				InterruptedException {
			config = HBaseConfiguration.create();
		}

		public void map(Object key, Text value, Context context)
				throws IOException, InterruptedException {
			String[] line = csvParser.parseLine(value.toString());
			String year = line[INDEX_YEAR];
			String month = line[INDEX_MONTH];
			String airLine = line[INDEX_AIR_LINE];
			String delayMin = line[INDEX_ARR_DEALY_MIN];
			String cancelled = line[INDEX_CANCELLED];
			String diverted = line[INDEX_DIVERTED];

			// put record
			HTable table = new HTable(config, TBL_NAME);
			byte[] row = Bytes.toBytes(airLine.concat(month).concat(
					key.toString()));
			// Put value value1 into column data:1
			byte[] databytes = Bytes.toBytes(COL_FNAME);
			Put p1 = new Put(row);
			p1.add(databytes, Bytes.toBytes("111"), Bytes.toBytes("value1111"));
			table.put(p1);
		}

	}

	public static void main(String[] args) throws Exception {
		Date begin = new Date();
		Configuration confFilter = new Configuration();
		String[] otherArgs = new GenericOptionsParser(confFilter, args)
				.getRemainingArgs();

		if (otherArgs.length != 1) {
			System.err.println("Usage: flight delay avg <in>");
			System.exit(2);
		}

		// Create table
		Configuration config = HBaseConfiguration.create();
		HBaseAdmin admin = new HBaseAdmin(config);

		if (admin.tableExists(TBL_NAME)) {
			admin.disableTable(TBL_NAME);
			admin.deleteTable(TBL_NAME);
		}
		HTableDescriptor htd = new HTableDescriptor(TBL_NAME);
		HColumnDescriptor hcd = new HColumnDescriptor(COL_FNAME);
		htd.addFamily(hcd);
		admin.createTable(htd);

		// filter all the valid leg1-leg2 pair and calculate the
		// delay time for each pair.
		// Job jobFilter = new Job(confFilter, "flight delay hpopulate");
		// jobFilter.setJarByClass(HPopulate.class);
		// jobFilter.setMapperClass(HPopulateMapper.class);

		// jobFilter.setMapOutputKeyClass(RecordKey.class);
		// jobFilter.setMapOutputValueClass(Record.class);
		//
		// jobFilter.setOutputKeyClass(Text.class);
		// jobFilter.setOutputValueClass(Text.class);

		// jobFilter.setNumReduceTasks(10);
		// FileInputFormat.addInputPath(jobFilter, new Path(otherArgs[0]));
		// jobFilter.waitForCompletion(true);
		// Date end = new Date();
		// System.out.println(begin);
		// System.out.println(end);
	}
}
