package hw4.hpopulate;

import hw4.plain.AverageDelay;
import hw4.plain.GroupingComparator;
import hw4.plain.Record;
import hw4.plain.RecordKey;
import hw4.plain.AverageDelay.AverageDelayMapper;
import hw4.plain.AverageDelay.FlightDelayFilterReducer;

import java.util.Date;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.util.GenericOptionsParser;

public class HPopulate {
	public static void main(String[] args) throws Exception {
		Date begin = new Date();
		Configuration confFilter = new Configuration();
		String[] otherArgs = new GenericOptionsParser(confFilter, args)
				.getRemainingArgs();
		if (otherArgs.length != 1) {
			System.err.println("Usage: flight delay avg <in>");
			System.exit(2);
		}

		// filter all the valid leg1-leg2 pair and calculate the
		// delay time for each pair.
		Job jobFilter = new Job(confFilter, "flight delay filter");
		jobFilter.setJarByClass(AverageDelay.class);
		jobFilter.setGroupingComparatorClass(GroupingComparator.class);
		jobFilter.setMapperClass(AverageDelayMapper.class);
		jobFilter.setReducerClass(FlightDelayFilterReducer.class);

		jobFilter.setMapOutputKeyClass(RecordKey.class);
		jobFilter.setMapOutputValueClass(Record.class);

		jobFilter.setOutputKeyClass(Text.class);
		jobFilter.setOutputValueClass(Text.class);

		jobFilter.setNumReduceTasks(10);
		FileInputFormat.addInputPath(jobFilter, new Path(otherArgs[0]));
		FileOutputFormat.setOutputPath(jobFilter, new Path(otherArgs[1]));
		jobFilter.waitForCompletion(true);
		Date end = new Date();
		System.out.println(begin);
		System.out.println(end);
	}
}
